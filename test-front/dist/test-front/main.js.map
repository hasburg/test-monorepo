{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-card class=\"header-card\">\n  <mat-card-header>\n    <img src=\"../assets/logo.png\" alt=\"logo\" class=\"logo\">\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Upload your image now <input style=\"display: none;\" #inputFile type='file'\n        (change)=\"onSelectFile($event)\" accept=\"image/jpeg,image/png\">\n      <div class=\"example-button-container\">\n        <button mat-fab (click)=\"inputFile.click()\" *ngIf=\"!fileToUpload\" >\n          <mat-icon>add_photo_alternate</mat-icon>\n        </button>\n        <button mat-fab (click)=\"uploadImage()\" *ngIf=\"fileToUpload\" >\n          <mat-icon>cloud_upload</mat-icon>\n        </button>\n      </div>\n    </mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <img *ngIf=\"url\" [src]=\"url\" class=\"imageUpload\">\n  </mat-card-content>\n</mat-card>","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'test-front';\n  url: any;\n  fileToUpload: File = null;\n  constructor(private httpClient: HttpClient) {}\n  onSelectFile(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      this.fileToUpload = event.target.files[0];\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]);\n\n      reader.onload = (event) => {\n        this.url = event.target.result;\n      };\n    }\n  }\n\n  uploadImage() {\n    this.postFile(this.fileToUpload).subscribe(\n      (el) => {\n        console.log(el);\n      },\n      () => {\n        //TODO: add error handle\n        this.fileToUpload = null;\n        this.url = null;\n      },\n      () => {\n        this.fileToUpload = null;\n        this.url = null;\n      }\n    );\n  }\n\n  postFile(fileToUpload: File): Observable<any> {\n    const endpoint = 'http://localhost:3000/api/upload';\n    const formData: FormData = new FormData();\n    formData.append('fileKey', fileToUpload, fileToUpload.name);\n    return this.httpClient.post(endpoint, formData);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}